embeddings=== tensor([[-0.2521, -0.6910,  0.1805,  ..., -0.0189,  0.0286, -0.1408],
        [ 0.1336, -1.9383, -0.4105,  ..., -1.2324, -0.3210,  0.3870],
        [-0.3611, -0.3715,  0.2634,  ..., -0.6185, -0.0461, -0.7930],
        ...,
        [-0.9803, -1.3371, -0.1232,  ..., -0.2981, -0.4761, -1.1704],
        [-0.1121, -0.8008,  0.2559,  ..., -0.5074, -0.7167, -0.4633],
        [-0.7248, -0.7019, -0.0940,  ..., -0.5861, -1.0753, -0.3363]],
       device='cuda:0', grad_fn=<AddmmBackward>)
labels===+++ tensor([80, 80, 80, 80, 80, 60, 60, 60, 60, 60, 94, 94, 94, 94, 94,  9,  9,  9,
         9,  9, 92, 92, 92, 92, 92, 26, 26, 26, 26, 26, 15, 15, 15, 15, 15,  1,
         1,  1,  1,  1, 53, 53, 53, 53, 53, 29, 29, 29, 29, 29, 51, 51, 51, 51,
        51, 37, 37, 37, 37, 37, 87, 87, 87, 87], device='cuda:0')
anchor_idx=== tensor([ 0,  0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  3,  3,  3,  3,  4,  4,
         4,  4,  5,  5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  7,  8,  8,  8,  8,
         9,  9,  9,  9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13,
        13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17,
        18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22,
        22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26,
        27, 27, 27, 27, 28, 28, 28, 28, 29, 29, 29, 29, 30, 30, 30, 30, 31, 31,
        31, 31, 32, 32, 32, 32, 33, 33, 33, 33, 34, 34, 34, 34, 35, 35, 35, 35,
        36, 36, 36, 36, 37, 37, 37, 37, 38, 38, 38, 38, 39, 39, 39, 39, 40, 40,
        40, 40, 41, 41, 41, 41, 42, 42, 42, 42, 43, 43, 43, 43, 44, 44, 44, 44,
        45, 45, 45, 45, 46, 46, 46, 46, 47, 47, 47, 47, 48, 48, 48, 48, 49, 49,
        49, 49, 50, 50, 50, 50, 51, 51, 51, 51, 52, 52, 52, 52, 53, 53, 53, 53,
        54, 54, 54, 54, 55, 55, 55, 55, 56, 56, 56, 56, 57, 57, 57, 57, 58, 58,
        58, 58, 59, 59, 59, 59, 60, 60, 60, 61, 61, 61, 62, 62, 62, 63, 63, 63],
       device='cuda:0')
pos_idx=== tensor([ 1,  2,  3,  4,  0,  2,  3,  4,  0,  1,  3,  4,  0,  1,  2,  4,  0,  1,
         2,  3,  6,  7,  8,  9,  5,  7,  8,  9,  5,  6,  8,  9,  5,  6,  7,  9,
         5,  6,  7,  8, 11, 12, 13, 14, 10, 12, 13, 14, 10, 11, 13, 14, 10, 11,
        12, 14, 10, 11, 12, 13, 16, 17, 18, 19, 15, 17, 18, 19, 15, 16, 18, 19,
        15, 16, 17, 19, 15, 16, 17, 18, 21, 22, 23, 24, 20, 22, 23, 24, 20, 21,
        23, 24, 20, 21, 22, 24, 20, 21, 22, 23, 26, 27, 28, 29, 25, 27, 28, 29,
        25, 26, 28, 29, 25, 26, 27, 29, 25, 26, 27, 28, 31, 32, 33, 34, 30, 32,
        33, 34, 30, 31, 33, 34, 30, 31, 32, 34, 30, 31, 32, 33, 36, 37, 38, 39,
        35, 37, 38, 39, 35, 36, 38, 39, 35, 36, 37, 39, 35, 36, 37, 38, 41, 42,
        43, 44, 40, 42, 43, 44, 40, 41, 43, 44, 40, 41, 42, 44, 40, 41, 42, 43,
        46, 47, 48, 49, 45, 47, 48, 49, 45, 46, 48, 49, 45, 46, 47, 49, 45, 46,
        47, 48, 51, 52, 53, 54, 50, 52, 53, 54, 50, 51, 53, 54, 50, 51, 52, 54,
        50, 51, 52, 53, 56, 57, 58, 59, 55, 57, 58, 59, 55, 56, 58, 59, 55, 56,
        57, 59, 55, 56, 57, 58, 61, 62, 63, 60, 62, 63, 60, 61, 63, 60, 61, 62],
       device='cuda:0')
neg_idx=== tensor([61, 61, 61, 61, 57, 57, 57, 57,  5,  5,  5,  5, 47, 21, 47, 47, 59, 59,
        59, 59,  2,  2,  2,  2, 36, 36, 36, 36, 47, 28, 47, 23, 46, 46, 46, 46,
        52, 21, 21, 21, 63, 63, 63, 63, 30, 31, 31, 58, 21, 21, 21, 21, 30, 57,
        30, 30, 58, 57, 57, 33, 11, 11, 11, 11, 47, 47, 13, 47, 21, 21, 21, 47,
        45, 45, 45, 23, 46, 46, 46, 46,  7, 57, 27, 57, 46, 46, 46, 46,  7, 47,
        47,  7, 47,  7,  7, 47, 46, 46, 46,  8, 47, 47, 47, 47, 47, 23, 47, 47,
        58, 58, 58, 58,  7,  7, 59,  7, 60, 58, 21, 13, 13, 58, 58, 13, 11, 58,
        11, 11, 11, 11, 11, 11, 13, 14, 11, 13, 11, 11, 11, 11,  9,  6, 21,  6,
         6,  9,  6,  6, 63, 62, 62, 63,  7,  7,  7,  7, 50, 52, 50, 23, 30, 30,
        30, 30, 28, 28, 24, 24, 63, 59, 63, 59, 30, 31, 31, 30, 30, 30, 30, 30,
        18, 23, 18, 18,  8,  8,  8,  8, 26, 26, 26, 26, 59, 23, 29, 27, 13, 21,
        13, 13, 57, 45, 45, 57, 45, 27, 27, 27, 49, 49, 49, 49, 42, 42, 42, 42,
        35, 35, 57, 35, 27, 27, 27, 27, 63, 63, 63, 63, 14,  1, 27,  4, 60, 30,
        30, 30, 60, 60, 60, 60, 59, 59, 59,  0,  0,  0, 10, 10, 10, 59, 59, 59],
       device='cuda:0')
anchor_embed--- tensor([[-0.2521, -0.6910,  0.1805,  ..., -0.0189,  0.0286, -0.1408],
        [-0.2521, -0.6910,  0.1805,  ..., -0.0189,  0.0286, -0.1408],
        [-0.2521, -0.6910,  0.1805,  ..., -0.0189,  0.0286, -0.1408],
        ...,
        [-0.7248, -0.7019, -0.0940,  ..., -0.5861, -1.0753, -0.3363],
        [-0.7248, -0.7019, -0.0940,  ..., -0.5861, -1.0753, -0.3363],
        [-0.7248, -0.7019, -0.0940,  ..., -0.5861, -1.0753, -0.3363]],
       device='cuda:0', grad_fn=<IndexBackward>)
positive_embed--- tensor([[ 0.1336, -1.9383, -0.4105,  ..., -1.2324, -0.3210,  0.3870],
        [-0.3611, -0.3715,  0.2634,  ..., -0.6185, -0.0461, -0.7930],
        [-0.4613, -0.4966, -0.2060,  ..., -1.1951, -0.1240, -0.1117],
        ...,
        [-0.3137, -0.0897,  0.6153,  ..., -0.7004, -0.0059, -0.0435],
        [-0.9803, -1.3371, -0.1232,  ..., -0.2981, -0.4761, -1.1704],
        [-0.1121, -0.8008,  0.2559,  ..., -0.5074, -0.7167, -0.4633]],
       device='cuda:0', grad_fn=<IndexBackward>)
negative_embed--- tensor([[-0.9803, -1.3371, -0.1232,  ..., -0.2981, -0.4761, -1.1704],
        [-0.9803, -1.3371, -0.1232,  ..., -0.2981, -0.4761, -1.1704],
        [-0.9803, -1.3371, -0.1232,  ..., -0.2981, -0.4761, -1.1704],
        ...,
        [-0.8425, -0.1798,  0.4792,  ..., -0.3539, -0.2134, -0.0434],
        [-0.8425, -0.1798,  0.4792,  ..., -0.3539, -0.2134, -0.0434],
        [-0.8425, -0.1798,  0.4792,  ..., -0.3539, -0.2134, -0.0434]],
       device='cuda:0', grad_fn=<IndexBackward>)

===============================================================================================================
embeddings=== torch.Size([64, 64])
labels===+++ torch.Size([64])
anchor_idx=== torch.Size([252])
pos_idx=== torch.Size([252])
neg_idx=== torch.Size([252])
anchor_embed--- torch.Size([252, 64])
positive_embed--- torch.Size([252, 64])
negative_embed--- torch.Size([252, 64])
